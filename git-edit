#!/bin/bash
#
#  git edit [commit] [file ...]
#
#    変更のあったファイル(modified or untracked)を編集する
#
#      引数なし   : 未コミットの変更有ファイルすべてを編集
#
#      [commit]   : 任意のコミットオブジェクトを指定 (e.g. HEAD, hash value)
#
#      [file ...] : 指定したファイルを編集
#                   (複数指定, ワイルドカードによるパス名展開可)
#

modified_files() {
    if [ -z "$1" ]; then
        git status --porcelain | cut -b 4- | sed 's/.* -> //' | grep -v '/$' | uniq
    else
        #git diff "$1^..$1" --name-status  2> /dev/null | cut -b 3- | sed 's/.* -> //' | grep -v '/$' | uniq
        git log --pretty=oneline --name-status -n 1 "$1" 2> /dev/null | sed '1d' | cut -b 3- | sed 's/.* -> //' | grep -v '/$' | uniq
    fi
}

#### Main ####

if ! type git > /dev/null 2>&1; then
    echo 'Git is not installed.' 2>&1
    exit 1
fi

if [ "$(git rev-parse --is-inside-work-tree 2> /dev/null)" != "true" ]; then
    echo 'Not a git repository.' 2>&1
    exit 1
fi

commit_hash=
if $(git rev-parse -q --verify "$1" > /dev/null 2>&1); then
    commit_hash=$1
    shift
fi

IFS=$'\n' files=($(modified_files "$commit_hash"))
if [ ${#files[@]} -lt 1 ]; then
    echo 'No modified files'
    exit
fi

editing_files=()

cdup_path=$(git rev-parse --show-cdup)

if [ $# -lt 1 ]; then
    for file in "${files[@]}"; do
        file="$cdup_path$(echo "$file" | sed 's/^"\(.*\)"$/\1/')"
        if [ -f "$file" ]; then
            editing_files+=("$file")
        fi
    done
    if [ ${#editing_files[@]} -lt 1 ]; then
        echo 'No editable file in modified files'
        exit
    fi
    exec ${GIT_EDITOR:-${EDITOR:-vi}} "${editing_files[@]}"
    exit
fi

toplevel_path=$(git rev-parse --show-toplevel)

for arg in "$@"; do
    [ -f "$arg" ] || break
    arg="$(cd "$(dirname "$arg")" && pwd)/$(basename "$arg")"
    for file in "${files[@]}"; do
        file="$toplevel_path/$(echo "$file" | sed 's/^"\(.*\)"$/\1/')"
        if [ "$arg" = "$file" ]; then
            if [ -f "$file" ]; then
                editing_files+=("$file")
            fi
            break
        fi
    done
done

if [ ${#editing_files[@]} -lt 1 ]; then
    echo 'No editable file in modified files'
    exit
fi

exec ${GIT_EDITOR:-${EDITOR:-vi}} "${editing_files[@]}"

