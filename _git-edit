#compdef git-edit
#
# zsh completion function for git-edit
#

function _git-edit_modified_files() {
    local file files
    if [[ -z $1 ]]; then
        files=$(git status --porcelain | cut -b 4- | sed 's/.* -> //' | uniq)
    else
        #git diff "$1^..$1" --name-only  2> /dev/null | sed 's/.* -> //' | uniq
        files=$(git log --oneline --name-only -n 1 "$1" 2> /dev/null | sed '1d' | sed 's/.* -> //' | uniq)
    fi
    for file in "${files[@]}"; do
        echo "$file" | sed 's/^"\(.*\)"$/\1/'
    done
}

function _git-edit() {
    if ! type git > /dev/null 2>&1; then
        _message 'Git is not installed'
        return
    fi

    if [[ "$(git rev-parse --is-inside-work-tree 2> /dev/null)" != "true" ]]; then
        _message 'Not a git repository'
        return
    fi

    local curcontext="$curcontext" state line
    local commit_id msg_commit_id cdup_path word
    local -a files editable_files deleted_files prefix

    _arguments '*:: :->files' && return

    ## Get full commit id.
    commit_id=$(echo "$line[1]" | sed 's/\\//g')
    if $(git rev-parse -q --verify "$commit_id" > /dev/null 2>&1); then
        msg_commit_id=" (commit id: $(git rev-parse --revs-only "$commit_id"))"
    else
        commit_id=
        msg_commit_id=
    fi

    files=(${(f)"$(_git-edit_modified_files "$commit_id")"})

    editable_files=()
    deleted_files=()

    cdup_path=$(git rev-parse --show-cdup)
    prefix=$(git rev-parse --show-prefix)

    for file in "${files[@]}"; do
        if [[ "$file" != "${file#$prefix}" ]]; then
            file=${file#$prefix}
        else
            file="$cdup_path$file"
        fi
        for word in "${words[@]}"; do
            if [[ $word == $file ]]; then
                file=
            fi
        done
        if [[ -z $file ]]; then
            continue
        fi
        if [[ -f $file ]]; then
            editable_files+=("$file")
        elif ! [[ -e $file ]]; then
            deleted_files+=("$file")
        fi
    done

    if [[ $#editable_files -eq 0 && $#deleted_files -eq 0 ]]; then
        _message "no modified files$msg_commit_id"
        return
    fi

    if [[ $#editable_files -gt 0 ]]; then
        _describe "modified files${msg_commit_id}" editable_files
    fi

    if [[ $#deleted_files -gt 0 ]]; then
        _describe -t deleted_files "deleteded files${msg_commit_id}" deleted_files
    fi
}

_git-edit "$@"
